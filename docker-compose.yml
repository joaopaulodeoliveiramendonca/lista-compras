services:
  db:
    image: postgres:16
    container_name: lista_compras_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: shoppinglist
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432" # host 5433 to avoid conflicts; inside containers it's 5432
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d shoppinglist"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build: ./api
    container_name: lista_compras_api
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/shoppinglist?schema=public
      NODE_ENV: development
      PORT: 3000
    depends_on:
      db:
        condition: service_healthy
    working_dir: /app
    volumes:
      - ./api:/app
      - api_node_modules:/app/node_modules
    command: >
      sh -c "pnpm install &&
             pnpm prisma:generate &&
             pnpm dev"

  web:
    image: node:20-bookworm-slim
    container_name: lista_compras_web
    ports:
      - "5173:5173"
    working_dir: /app
    volumes:
      - ./web:/app
    environment:
      # o browser (seu Mac) vai falar direto com a API em localhost:3000
      VITE_API_URL: http://localhost:3000
    depends_on:
      - api
    command: >
      bash -lc "corepack enable &&
                corepack prepare pnpm@9.6.0 --activate &&
                if [ ! -f package.json ]; then echo '>> web vazio, rode o passo 1 (scaffold)'; sleep 999999; else pnpm install && pnpm dev --host 0.0.0.0 --port 5173; fi"
  web-prod:
    build:
      context: ./web
      dockerfile: Dockerfile
    image: lista-compras-web:prod
    container_name: lista_compras_web_prod
    ports:
      - "8080:80"
    depends_on:
      - api

volumes:
  db_data:
  api_node_modules: